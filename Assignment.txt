01.	Write a program to print Hello World. Compile and run it using command prompt.

------->


class hello{
       
      public static void main(String args[])
      {

            System.out.println("welcome cdac java");
 
      }

}


===============================================================================================================

02  Write a program to declare a variable named rollNo of integer type. Assign it a value (let say 100) to it and print the following statement roll no = 100 .

------>

           
class variable{
   
 public static void main(String [] args)
  {
           int rollNo=100;
        System.out.println("roll no ="+rollNo);

  }


}
===============================================================================================================
03.	Find the result of following expressions. You need to determine the primitive data type of the variable by looking carefully the given expression and initialize variables by any random value.
A. y = x2 + 3x - 7 (print value of y) 
B. y = x++ + ++x (print value of x and y) 
C. z = x++ - --y - --x  +  x++ (print value of x ,y and z)
D. z = x && y || !(x || y)  (print value of z) [ x, y, z are boolean variables ]
-------->
class Expression
{
	public static void main(String args[])
	{
		int x=4;
		int y=(x^2)+(x*3)-7;
		System.out.println("Y = "+y);
		
		y=x++ + ++x;
		System.out.println("X = "+x+"Y = "+y);
		
		int z =x++ - --y - --x + x++;
		System.out.println("X = "+x+"Y = "+y+" Z = "+z);
		
		boolean X = true;
		boolean Y = true;
		
		boolean Z = X && Y || !(X || Y);
		System.out.println(" Z = "+Z);
		
	}
}


===============================================================================================================
04.	Write a program that initializes 2 byte type of variables. Add the values of these variables and store in a byte type of variable. [Note: primitive down casting is required in this program ] .
------>

class byte1{

  public static void main(String args[])
   {
           byte a=10;
           byte b=20;

           int c;
           c=a+b;
           byte c1=(byte)c;
           System.out.println(c1);
 }


}


===============================================================================================================/*05.Write a program that takes user’s name as command line argument and prints Welcome <entered user name>.*/


class shucmd{
         public static void main(String args[]){
             
                    String s1=args[0];
                   System.out.println("welcome  "+s1);

                  

    }
 

}

===============================================================================================================

 /*06.	Write a program that takes radius of a circle as input. Read the entered radius using Scanner class. Then calculate and print the area and circumference of the circle.*/


import java.util.Scanner;
class circle{

       public static void main(String args[])
       {
             System.out.println("Enter the radius of the circle");
             Scanner sc=new Scanner(System.in);
             double pie = 3.14;
             double radius = sc.nextDouble();

             //Area = PI*radius*radius
            double area = pie*(radius * radius);
            System.out.println("The area of circle is: " + area);

          //Circumference = 2*Pie*radius
          double circumference= 2*pie*radius;
          System.out.println( "The circumference of the circle is:"+circumference) ;


       }

}
===============================================================================================================
/*07.	Write a program to calculate sum of 5 subject’s marks & find percentage. Take the obtained marks from user using Scanner class. Output should be in this format [ percentage marks = 99 % ]. Use concatenation operator here.*/


import java.util.Scanner;

class percentage{
               
       public static void main(String args[])
       {
             System.out.println("ENTER THE 5 SUBJECT MARKS");
             Scanner sc=new Scanner(System.in);
             int subj1=sc.nextInt();
             int subj2=sc.nextInt();
             int subj3=sc.nextInt();
             int subj4=sc.nextInt();
             int subj5=sc.nextInt();
             double total;
             double Average; 
             double Percentage;
           
            total = subj1 + subj2 + subj3 + subj4+ subj5;
            Average = total / 5;
	    Percentage = (total / 500) * 100;
	    
	    System.out.println(" Total Marks =  " + total);
	    System.out.println(" Average Marks =  " + Average);
	    System.out.println(" Marks Percentage =  " + Percentage);
            
                 

       }



}


===============================================================================================================

/*08.	Write a program to find the simple interest. Take the principle amount, rate of interest and time from user using Scanner class.*/


import java.util.Scanner;

class simpleinte{

        public static void main(String args[])
        {
                Scanner sc=new Scanner(System.in);
                
                 System.out.println("ENTER THE PRINCIPLE AMOUNT");
                 double principal_amount=sc.nextDouble();

                 
                 System.out.println("ENTER THE RATE OF INTREST ");
                 double  roi=sc.nextDouble();
                   
                 System.out.println("ENTER THE TIME");
                 double  time=sc.nextDouble();
      
                 double simpleInterset;
                 simpleInterset = (principal_amount * roi * time) / 100;
		
		System.out.println("\n The Simple Interest for Principal Amount " + principal_amount + " is = " + simpleInterset);

        }

}

===============================================================================================================
/*09.	Write a program to read the days (eg. 670 days) as integer value using Scanner class. Now convert the entered days into complete years, months and days and print them.*/


import java.util.Scanner;
class que9
{
    public static void main(String args[])
    {
        int m, year, week, day;

        Scanner s = new Scanner(System.in);
        System.out.print("Enter the number of days:");
        m = s.nextInt();

        year = m / 365;
        m = m % 365;
        System.out.println("No. of years:"+year);

        week = m / 7;
        m = m % 7;
        System.out.println("No. of weeks:"+week);

        day = m;
        System.out.println("No. of days:"+day);
    }
}


===============================================================================================================

/*10.	Write a program to convert temperature from Fahrenheit to Celsius. Take Fahrenheit as input using Scanner class. [ formula : C= 5*(f-32)/9 ]*/



import java.util.*;
class que10{
  public static void main(String[] args) {
    float temperature;
    Scanner in = new Scanner(System.in);

    System.out.println("Enter temperature in Fahrenheit");
    temperature = in.nextInt();

    temperature = ((temperature - 32)*5)/9;

    System.out.println("temperature in Celsius = " + temperature);
  }
}


===============================================================================================================

/*11.	Write a program to swap two numbers without using third variable.*/


public class que11{

 public static void main(String[] args) {

  int x = 10;
  int y = 20;

  System.out.println("Before Swapping");
  System.out.println("Value of x is :" + x);
  System.out.println("Value of y is :" + y);

  //add both the numbers and assign it to first
  x = x + y;
  y = x - y;
  x = x - y;

  System.out.println("After Swapping");
  System.out.println("Value of x is :" + x);
  System.out.println("Value of y is :" + y);
 }
}

===============================================================================================================
12.	In a company an employee is paid as under: If his basic salary is less than Rs. 10000, then HRA = 10% of basic salary and DA = 90% of basic salary. If his salary is either equal to or above Rs. 10000, then HRA = Rs. 2000 and DA = 98% of basic salary. If the employee's salary is input by the user write a program to find his gross salary. [ formula : GS= Basic + DA + HRA ]
===>
import java.util.*;
class GrossSal
{
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter Basic Salary");
		double sal = sc.nextDouble();
		if(sal < 10000)
		{
			double HRA = sal*0.10;
			double DA = sal*0.90;
			double GrossSal= sal + HRA + DA;
			System.out.println("Gross Salary = "+GrossSal);
		}
		else
		{
			double HRA = 2000;
			double DA = sal*0.98;
			double GrossSal= sal + HRA + DA;
			System.out.println("Gross Salary = "+GrossSal);
		}
	}
}



===============================================================================================================
/*13.	Program to find greatest in 3 numbers. [ once using if else statement and then using ternary operator ( logical operator) ]  */


import java.util.Scanner;
class que13
{
    public static void main(String[] args) 
    {
        int num1, num2, num3, result, temp;

       
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter First Number:");
        num1 = sc.nextInt();
        System.out.println("Enter Second Number:");
        num2 = sc.nextInt();
        System.out.println("Enter Third Number:");
        num3 = sc.nextInt();
   
       
        
        /* In first step we are comparing only num1 and
         * num2 and storing the largest number into the
         * temp variable and then comparing the temp and
         * num3 to get final result.
         */
        temp = num1>num2 ? num1:num2;
        result = num3>temp ? num3:temp;
        System.out.println("Largest Number is:"+result);
    }
}

===============================================================================================================
14.	Program to check that entered year is a leap year or not.
----->
import java.util.*;
class LeapYear
{
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter Year : ");
		int year = sc.nextInt();
		
		if (((year % 4 == 0) && (year % 100!= 0)) || (year%400 == 0))
		{
			System.out.println("Leap Year");
		}
		else
		{
		  	System.out.println("Not a Leap Year");
		}
	}
}
===============================================================================================================
/*15.Accept person’s gender (character m for male and f for female), age (integer), as input and then check whether person is eligible for marriage or not.*/
---->

import java.util.*;
class MarriageAge
{
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter gender & age : ");
		char sex = sc.next().charAt(0);
		int age = sc.nextInt();
		
		if ((sex=='m' && age >21) || (sex=='f' && age > 18))
		{
			System.out.println("person is eligible for marriage");
		}
		else
		{
		  	System.out.println("person is Not eligible for marriage");
		}
	}
}

===============================================================================================================
/*16.	Write a program to print table of any entered number using loop
*/
import java.util.Scanner;
class que16{

   public static void main(String args[]) {

      System.out.println("Enter an integer variable :: ");
      Scanner sc = new Scanner(System.in);
      int num = sc.nextInt();
      for(int i=1; i<= 20; i++) {
         System.out.println(""+num+" X "+i+" = "+(num*i));
      }
   }
}

===============================================================================================================
/*17.	Write a program to reverse a given number.*/
import java.util.*;
class que17
{

public static void main(String[] args)
{
int n, rem = 0, rev = 0;
Scanner sc = new Scanner(System.in);
System.out.print("\nEnter a number : ");
n = sc.nextInt();
while(n != 0)
{
rem = n%10;
rev = rev*10 + rem;
n /= 10;
}
System.out.println("Reversed Number : " + rev);


}
}
===============================================================================================================
/*18.	Program to check whether number is prime or not.*/
public class que18{

    public static void main(String[] args) {

        int num = 28;
        boolean flag = false;
        for(int i = 2; i <= num/2; ++i)
        {
            // condition for nonprime number
            if(num % i == 0)
            {
                flag = true;
                break;
            }
        }

        if (!flag)
            System.out.println(num + " is a prime number.");
        else
            System.out.println(num + " is not a prime number.");
    }
}
===============================================================================================================
/*19.	Calculate  series : 12+22+32+42+.........+n2*/
import java.util.*;
class Series
{
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter Range :");
		int range = sc.nextInt();
		int sum=0;
		int i=2;
		while(i<=(range+2))
		{
			sum+=i;
			i=i+10;
		}
		System.out.println("Sum = "+sum);
	}
}

===============================================================================================================
/*20.	Print all prime numbers between two given numbers. [ break continue ]*/
 class que20{

    public static void main(String[] args) {

        int low = 20, high = 50;

        while (low < high) {
            boolean flag = false;

            for(int i = 2; i <= low/2; ++i) {
                // condition for nonprime number
                if(low % i == 0) {
                    flag = true;
                    break;
                }
            }

            if (!flag && low != 0 && low != 1)
                System.out.print(low + " ");

            ++low;
        }
    }
}
===============================================================================================================
/*21.	Program to show sum and average of 10 element array. Accept array elements from user. */

import java.util.Scanner;
class que21{

      public static void main(String args[]){
           
                Scanner sc= new Scanner(System.in);
          
                 int arr[]=new int[5];
                                    System.out.println("enter the element in the array");
                          for(int i=0;i<arr.length;i++){
                                  
                                  arr[i]=sc.nextInt();      
                            
                               }       
 
                              int sum=0;
                             System.out.println("the element in the array");
                          for(int i=0;i<arr.length;i++){
                                
                                     sum=sum+arr[i];
                                 
                                      
                              }       
 
                    System.out.println("sum = "+sum);
                       int average=0;
                       average=sum/arr.length;
                      System.out.println("Average ="+average);
       }

}
===============================================================================================================

/*22.	Sort a ten element array in descending order.*/

public class que22{    
    public static void main(String[] args) {        
        //Initialize array     
        int [] arr = new int [] {5, 2, 8, 7, 1};     
        int temp = 0;    
            
        //Displaying elements of original array    
        System.out.println("Elements of original array: ");    
        for (int i = 0; i < arr.length; i++) {     
            System.out.print(arr[i] + " ");    
        }    
            
        //Sort the array in descending order    
        for (int i = 0; i < arr.length; i++) {     
            for (int j = i+1; j < arr.length; j++) {     
               if(arr[i] < arr[j]) {    
                   temp = arr[i];    
                   arr[i] = arr[j];    
                   arr[j] = temp;    
               }     
            }     
        }    
            
        System.out.println();    
            
        //Displaying elements of array after sorting    
        System.out.println("Elements of array sorted in descending order: ");    
        for (int i = 0; i < arr.length; i++) {     
            System.out.print(arr[i] + " ");    
        }    
    }    
}    


===============================================================================================================
/*23.	Write a program to reverse the array elements.*/
import java.util.Scanner;
class que23{

      public static void main(String args[]){
           
                Scanner sc= new Scanner(System.in);
          
                 int arr[]=new int[5];
                                    System.out.println("enter the element in the array");
                          for(int i=0;i<arr.length;i++){
                                  
                                  arr[i]=sc.nextInt();      
                            
                               }       
 
                     
                             System.out.println("the reverse element in the array");
                          for(int i=arr.length-1;i>=0;i--){
                                  System.out.println( arr[i] );
                                      
                            
                               }       
 

       }

}

===============================================================================================================
24.	Write a program to search an element in the array.
------->
import java.util.*;
class SearchInArray
{
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter Size of array :");
		int n= sc.nextInt();
		int arr[]= new int[n];
		int flag=0;
		System.out.println("Enter array Elements:");
		for(int i=0;i<n;i++)
		{
			arr[i]=sc.nextInt();
		}
		
		System.out.println("Enter Number to search in array :");
		int num= sc.nextInt();
		for(int i=0;i<n;i++)
		{
			if(num==arr[i])
			{
				System.out.println(num+" is at "+i+" index");
				flag=0;
				break;
			}
			else
			{
				flag=1;
				continue;
			}
		}
		
		if(flag==1)
			System.out.println("Number is Not present in array");
	}
}

==============================================================================================================
25.	Write the program to find the sum of even elements and sum of odd elements present in the array of integer type.
---->
import java.util.*;
class EvenOddSum
{
	public static void main(String args[])
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter array size :-");
		int n=sc.nextInt();
		int arr[]=new int[n];
		int evenSum=0,oddSum=0;
		for(int i=0;i<n;i++)
		{
			arr[i]=sc.nextInt();
			if(arr[i]%2==0)
			{
				evenSum+=arr[i];
			}
			else
			{
				oddSum+=arr[i];
			}
		}
		
		System.out.println("Sum of Even elements :- "+evenSum);
		System.out.println("Sum of Odd elements :- "+oddSum);
	}
}

==============================================================================================================
26.	Create an array of 17 elements in 5 rows.  And calculate sum of all elements.
--->
import java.util.*;
class Array2dSum
{
	public static void main(String args[])
	{
		Scanner sc=new Scanner(System.in);
		int arr[][]=new int[5][];
		int sum=0;
		for(int i=0;i<5;i++)
		{
			System.out.println("Enter col size for row "+i);
			int c=sc.nextInt();
			for(int j=0;j<c;j++)
			{
				arr[i][j]=sc.nextInt();
				sum+=arr[i][j];
			}
		}
		System.out.println("Sum of all array Element ="+sum);
	}
}

==============================================================================================================
27.	Write a program to fine the smallest and greatest number present in the array of integer type.
------>
import java.util.*;
class ArrayMaxMin
{
	public static void main(String args[])
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter Array Size :-");
		int n=sc.nextInt();
		int arr[]=new int[n];
		System.out.println("Enter array "+n+" elements :-");
		for(int i=0;i<n;i++)
		{
			arr[i]=sc.nextInt();
		}
		int min=arr[0];
		int max=arr[0];
		for(int i=1;i<n;i++)
		{
			if(max < arr[i])
			{
				max=arr[i];
			}
			else if(min > arr[i])
			{
				min=arr[i];
			}			
		}
		System.out.println("Max Element in Array :- "+max);
		System.out.println("Min Element in Array :- "+min);
	}
}

==============================================================================================================
28.	Initialize one String type of array and print the elements using for each loop.
---->
import java.util.*;
class StringArray
{
	public static void main(String args[])
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter Array Size :-");
		int n=sc.nextInt();
		String str[]=new String[n];
		for(int i=0;i<n;i++)
		{
			str[i]=sc.next();
		}
		System.out.println("String Array Data :-");
		for(String a : str)
		{
			System.out.println(a);
		}
	}
}

==============================================================================================================
29.	Write a program to print the total number of one-D arrays in a two-D array and the number of elements in every one-D array present in the two-D arrays.
---->
import java.util.*;
class ElementInArrayQ28
{
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter Size of rows and cols :-");
		int r=sc.nextInt();
		int c=sc.nextInt();
		int arr[][]=new int[r][c];
		int cntOneD = 0;
		int cntTotalEle = 0;
		for(int i=0;i<r;i++)
		{
			cntOneD++;
			for(int j=0;j<c;j++)
			{
				arr[i][j]=sc.nextInt();
				cntTotalEle++;	
			}
		}
		System.out.println("No of 1-D Arrays :- "+cntOneD);
		System.out.println("No of Element :- "+cntTotalEle);
	}
}

==============================================================================================================
30.	Create an integer type 2-D array of size [3X3]. Take the elements from the user and then calculate the sum of the elements present in the diagonal.
----->
import java.util.*;
class MatrixDiagonalSum
{
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		int arr[][]=new int[3][3];
		int sum=0;
		for(int i=0;i<arr.length;i++)
		{
			for(int j=0;j<arr[i].length;j++)
			{
				arr[i][j]=sc.nextInt();	
				if(i==j)
				{
					sum+=arr[i][j];
				}
			}
		}
		System.out.println("Sum of All Diagonal Elements in Array Matrix :- "+sum);
	}
}

==============================================================================================================

/*31.	Create a class Student with 2 data members rno and name.
       Create one method setData() that takes roll number and student name as parameter 
        and stores them in data members rno and name. 
      Create one more method showData() to print the data member values. 
      Create another class ( main class) StudentDemo that creates Student class object and calls setData() 
       and showData() methods.*/


class student{
      private int rno;
      private String name;


       void setData(int rno,String name)
          {
             this.rno=rno;
             this.name=name;              
          }
           
       void show()
        {
              System.out.println("studentRollno = "+rno+"  studentName = "+name);

        }
             
}

class studentDemo{

        public static void main(String args[]){
                student s= new student();
                  s.setData(116,"Despacito"); 
                  s.show();

          }


}
===============================================================================================================

/*32.	Modify the above program (no. 30) to count the no of Student objects created. [ In this program static variable is required ]*/


class student{
      private int rno;
      private String name;
        
         
      static int noOfObjects = 0; 
  
    // Instead of performing increment in the constructor 
    // instance block is preferred to make this program generic. 
    { 
        noOfObjects += 1; 
    }           

         
       void setData(int rno,String name)
          {
             this.rno=rno;
             this.name=name; 
            // noOfObjects += 1;              
          }
           
       void show()
        {
              System.out.println("studentRollno = "+rno+"  studentName = "+name);

        }
             
}

class studentDemo{

        public static void main(String args[]){
                student s= new student();
                  s.setData(116,"Despacito"); 
                  s.show();
              
                
         // We can also write t1.noOfObjects or 
         // t2.noOfObjects or t3.noOfObjects 
         System.out.println(student.noOfObjects); 


          }


}
===============================================================================================================

/*34.	Create a class Circle that has two data members, one to store the radius and another to store area
    and 
  three methods first init() method to input radius from user,
  second calculateArea() method to calculate area of circle and
  third display() method to display values of radius and area. 
  Create class CircleDemo ( main class) that creates the Circle object and calls init(), calculateArea() and display() methods.*/


import java.util.Scanner;
class circle{
      private double radius;
      private double area;

      void init(double radius)
       {
              this.radius=radius;

       }    
   
       void calculateArea()
        {
                  area=3.14*radius*radius;
                  

         }

        void show()
        {
              System.out.println("The area of circle is = "+area);

        }

}

class circleDemo
{
     public static void main(String args[])
     {

         Scanner sc=new Scanner(System.in);
         circle ar[]=new circle[2];
         
                    
          for(int i=0;i<ar.length;i++)
          {
              System.out.println("Enter the radius : ");
              double radius1 = sc.nextDouble();

                        
             circle c=new circle(); 
             c.init(radius1);
             c.calculateArea();
           //  c.show();      
             ar[i]=c;

          }

          ar[0].show();
          ar[1].show();

       
        
    }
}

===============================================================================================================
/*35.	Create a class MathOperation that has four static methods. 
  add() method that takes two integer numbers as parameter and returns the sum of the numbers.
  subtract() method that takes two integer numbers as parameter and returns the difference of the numbers.   multiply() method that takes two integer numbers as parameter and returns the product.
  power() method that takes two integer numbers as parameter and returns the power of first number to second number.
 Create another class Demo (main class) that takes the two numbers from the user
 and calls all four methods of MathOperation class by providing entered numbers and prints the return values of every method.*/



import java.util.Scanner;

class MathOperation{
      
         private int x;
         private int y;


        static void add(int i,int j)
        {   int a;    
            a=i+j;
            System.out.println("Subtraciton  is = "+a);

        }
 
        static void subtract(int i,int j)
        {
           int a;    
            a=i-j;
            System.out.println("Multipilcation is = "+a);
          
        }

        static void multiply(int i,int j)
        {
           int a;    
            a=i*j;
            System.out.println("Addition is = "+a);
         
        }
       
        static void show(int res)
        {

           System.out.println(res);
        }
         

}
class Demo{

         public static void main(String args[])
         {
          Scanner sc=new Scanner(System.in);
           System.out.println("Enter the 1st number: ");
              int x= sc.nextInt();
           System.out.println("Enter the 2nd number: ");
              int y= sc.nextInt();

          // MathOperation m=new MathOperation();
               MathOperation.add(x,y);
               MathOperation.subtract(x,y);
               MathOperation.multiply(x,y);
              //MathOperation.show();

         }


}


===============================================================================================================

/*36.	Create a class MathOperation containing overloaded methods ‘multiply’ to calculate multiplication of following arguments. 
a.	 two integers 
b.	 three floats 
c.	 all elements of array 
d.	one double and one integer 
*/


import java.util.Scanner;

class MathOperation{
      
         private double x;
         private double y;


        static void multiply(int i,int j)
        {
            double a;    
            a=i*j;
            System.out.println("Multiplication is = "+a);
         
        }
        
        static void multiply(float i,float j,float k)
        {
            double a;    
            a=i*j*k;
            System.out.println("Multiplication is = "+a);
         
        }

       static void multiply(double i,int j)
        {
           double a;    
            a=i*j;
            System.out.println("Multiplication is = "+a);
         
        }

        
         public static void main(String args[])
         {
         /* Scanner sc=new Scanner(System.in);
           System.out.println("Enter the 1st number: ");
              double x= sc.nextDouble();
           System.out.println("Enter the 2nd number: ");
              double y= sc.nextDouble();*/

                MathOperation.multiply(10,20);
               MathOperation.multiply(12.2f,13.2f,14.2f);
                MathOperation.multiply(12.4,10);
            

         }

        
        
       }

===============================================================================================================
/*37.	Create a class Person with properties (name and age) with following features. 
a.	Default age of person should be 18.
b.	A person object can be initialized with name and age.
c.	Method to display name and age of person
Create another class PersonDemo ( main class ) that demonstrates the functionalities of Person class by creating Person object and calling methods.
*/


class person{

     private String name;
     private int age;

     person(String name,int age)
     {
        this.name=name;
        this.age=age;
     }
      
     void show()
      {
    
             System.out.println(name+"  "+age);

      }

}

class persondemo{

      public static void main(String args[])
      {
           person p1=new person("shubham",101);
             p1.show();  

      }

}


===============================================================================================================
38.	Create a class Employee with three data members (empNo, salary and totalSalary) and following features.
a.	Only parameterized constructor. [Do not overload the constructor]
b.	totalSalary always represents salary total of all the employees created.
c.	empNo should be auto incremented.
d.	display total employees and totalSalary using a method.
Create another class EmployeeDemo (main class) that creates some Employee objects and calls Employee method to display no. of employees and total of their salaries.
--->
class Employee
{
	private static int empNo=0;
	private float salary;
	private static float totalSalary;
	Employee(float salary)
	{
		empNo++;
		this.salary=salary;
		totalSalary+=salary;
	}
	static void calTotalSalary()
	{
		System.out.println(totalSalary);
	}
	void display()
	{
		System.out.println(empNo+" "+salary);
	}
}
class EmployeeDemo
{
	public static void main(String args[])
	{
		Employee e=new Employee(2000);
		Employee e1=new Employee(2000);
		Employee e2=new Employee(2000);
		e.display();
		e1.display();
		e2.display();
		Employee.calTotalSalary();
	}
}


===============================================================================================================

39.	Create class Product with three data members (pid, price, quantity) and parameterized constructor that takes values for all three data members.  
Create a main method in different class (say ProductDemo) and perform following task:
a. Accept information for five Product objects from user and store objects in an array
b. Find pid of product with highest price. 
c. Create a static method (with array of product’s object as argument) in Product class to calculate and return total amount spent on all products. ( amount spent on single product = price of product * quantity of product )
------>
import java.util.*;

class Product{
    int pid;
    double price;
    int qty;
    
    public Product(){
         this.pid = 0;
        this.price = 0;
        this.qty = 0;
    }
    
    public Product(int pid, double price, int qty){
        this.pid = pid;
        this.price = price;
        this.qty = qty;
    }
    
    public void display(){
        System.out.println("Pid : "+this.pid+", Price : "+this.price+", Quantity : "+this.qty);
    }
    
    public static double calAmount(Product []arr){
        double totalAmount=0;
        for(int i =0; i<arr.length; i++){
            double productAmt = arr[i].price * arr[i].qty;
            totalAmount += productAmt;
        }
        return totalAmount;
    }
}

public class ProductDemo {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc = new Scanner(System.in);
		Product arr[] = new Product[5];
	    
	    for(int i =0; i<5 ; i++){
	        System.out.println("Enter pid, price and quantity for the Product : ");
	        int id = sc.nextInt();
	        double price = sc.nextDouble();
	        int q = sc.nextInt();
	        
	        Product item = new Product(id, price, q);
	        arr[i] = item;
	    }
	    double max = 0;
	    int id=arr[0].pid;
	    int qty=arr[0].qty;
	    for(int i=0; i<5; i++){
	        if(max < arr[i].price){
                max = arr[i].price;
                id = arr[i].pid;
                qty=arr[i].qty;
	        }
	    }
	    
	    System.out.println("Highest price Product :\n Pid : "+id+", Price : "+max+", quantity : "+qty);
	    System.out.println("Total Amount Spent : "+Product.calAmount(arr));
	}
}


===============================================================================================================
40.	Create a class Student having data members name, roll no., age and score. Write a program to accept 10 records of student and store them in an array. And then arrange the student records based on the score group [0-50], [50-65], [65-80], [80-100].
----->
import java.util.*;
class Student
{
	int rno;
	String name;
	int age;
	int score;
	
	Student()
	{
		this.rno=0;
		this.name=null;
		this.age=0;
		this.score=0;
	}
	
	Student(int rno, String name,int age,int score)
	{
		this.rno=rno;
		this.name=name;
		this.age=age;
		this.score=score;
	}
	void show()
	{
		System.out.println(rno+" "+name+" "+age+" "+score);
	}
}
class StudentRecordDemo
{
	public static void main(String args[])
	{
		Scanner sc=new Scanner(System.in);
		Student arr[]=new Student[3];
		int cnt1=0,cnt2=0,cnt3=0,cnt4=0;
		for(int i=0;i<arr.length;i++)
		{
			System.out.println("Enter Student" +i+" data");
			int rno=sc.nextInt();
			String name=sc.next();
			int age=sc.nextInt();
			int score=sc.nextInt();
			arr[i]=new Student(rno,name,age,score);
		}
		for(int i=0;i<arr.length;i++)
		{
			
			if(arr[i].score>=0 && arr[i].score<=50)
			{
				System.out.println("Score Group between 0-50");
				arr[i].show();
				cnt1++;
			}
			else if(arr[i].score>50 && arr[i].score<=65)
			{
				System.out.println("Score Group between 50-65");
				arr[i].show();
				cnt2++;
			}
			else if(arr[i].score>65 && arr[i].score<=80)
			{
				System.out.println("Score Group between 65-80");
				arr[i].show();
				cnt3++;
			}
			else if(arr[i].score>80 && arr[i].score<=100)
			{
				System.out.println("Score Group between 80-100");
				arr[i].show();
				cnt4++;
			}
		}
		System.out.println("Total Student Score between 0-50 = "+cnt1);
		System.out.println("Total Student Score between 50-65 = "+cnt2);
		System.out.println("Total Student Score between 65-80 = "+cnt3);
		System.out.println("Total Student Score between 80-100 = "+cnt4);
		
		
		
	}
}

===============================================================================================================
41.	Write a program to demonstrate this() construct functionality.
---->
class ThisConstruct
{
	private int id;
	private String name;
	ThisConstruct()
	{
		this(100,"ABC")
	}
	ThisConstruct(int id,String name)
	{
		this.id=id;
		this.name=name;
	}
}
class ThisConstructDemo
{
	public static void main(String args[])
	{
		ThisConstruct t=new ThisConstruct();
	}
}

===============================================================================================================
42.	Create a class Tile to store the edge length of a square tile, and create another class Floor to store length and width of a rectangular floor. Add method totalTiles(Tile t) in Floor class with Tile as argument to calculate the whole number of tiles needed to cover the floor completely.
------->
import java.util.*;

class Tile{
	public float Edge_length ;
	Tile(){}
	Tile(float Edge_length){
		this.Edge_length=Edge_length;
	}
	
}
class FloorDemo
{
	private float length;
	private float width;
	FloorDemo(){}
	FloorDemo(float length , float width)
	{
		this.length = length;
		this.width=width;
	}
	float totalTiles(Tile t)
	{
		float total=0;
		float area_tile = t.Edge_length * t.Edge_length;
		float area_floor = length * width;
		total = area_floor/area_tile;
		return total;
	}
	
	public static void main (String args[])
	{
		Scanner sc = new Scanner(System.in);

		System.out.println("enter the tile edge length");
		float el= sc.nextFloat();

		Tile t = new Tile(el);

		System.out.println("enter the floor length and width");
		float length = sc.nextFloat();
		float width = sc.nextFloat();

		FloorDemo f = new FloorDemo(length,width);

		float result = f.totalTiles(t);

		System.out.println("total no of tilles  : "+result);
	}
	
}

===============================================================================================================
43.	Create a class OneBHK with instance variables roomArea, hallArea and price. Then create default constructor that initializes instance variables with some values and a parameterized constructor that takes values for all instance variables and stores them in instance variables. Now create a method named show()  to print OneBHK’s instance variable values.
Create another class TwoBHK which has (inherites) all the properties and behaviors of OneBHK and a new instance variable room2Area. Then create default constructor to initialize all 4 instance variables and a parameterized constructor to take the values for initialization of all instance variables. Override show() method to print all data member information.
Write main method in another class (Say Demo) and store three TwoBHK flat’s information and print information using show method. Also print total amount of all flats. 
------>
class OneBHK
{
	private int roomArea;
	private int hallArea;
	private int price;
	
	OneBHK()
	{
		this.roomArea=0;
		this.hallArea=0;
		this.price=0;
	}
	OneBHK(int roomArea,int hallArea,int price)
	{
		this.roomArea=roomArea;
		this.hallArea=hallArea;
		this.price=price;
	}
	void show()
	{
		System.out.println("Room Area = "+roomArea+" Hall Area = "+hallArea+" Price = "+price);
	}
}
class TwoBHK extends OneBHK
{
	private int room2Area;
	TwoBHK()
	{
		this.room2Area=0;
	}
	TwoBHK(int roomArea,int hallArea,int price, int room2Area)
	{
		super(roomArea, hallArea, price);
		this.room2Area=room2Area;
	}
	void show()
	{
		super.show();
		System.out.println("Room 2 Area = "+room2Area);
	}
}
class BHKDemo
{
	public static void main(String args[])
	{
		TwoBHK tb=new TwoBHK(125,56,3600,128);
		tb.show();
	}
}


===============================================================================================================
44.	Create three classes
-	Faculty with two data members facultyId and salary and two methods, one intput() method for accepting facultyId as input and another printSalary() to print salary.
-	FullTimeFaculty that inherits class Faculty with two data members’ basicSalary and allowance. Override input() method in this class that calls super class inut() method and accepts basicSalary and allowance as input. Salary should not be accepted as input but should be calculated using formula (basicSalary + allowance)
-	PartTimeFaculty that inherits class Faculty with two data members’ workingHours, ratePerHour. Override input() method in this class that calls super class inut() method and accepts workingHours and ratePerHour as input. Salary should not be accepted as input but should be calculated using formula ( workingHour * ratePerHour )
---->
import java.util.*;
class Faculty
{
	int facultyId;
	float salary;
	void input(int facultyId)
	{
		this.facultyId=facultyId;
	}
	void printSalary()
	{
		System.out.println("FacultyId = "+facultyId+" Salary ="+salary);
	}
	void setSalary(float salary)
	{
		this.salary=salary;
	}
	
}
class FullTimeFaculty extends Faculty
{
	float basicSalary;
	float allowance;
	void input(int facultyId,float basicSalary, float allowance)
	{
		input(facultyId);
		this.basicSalary=basicSalary;
		this.allowance=allowance;
		setSalary(basicSalary+allowance);
	}

	
}
class PartTimeFaculty extends Faculty
{
	int workingHours;
	float ratePerHour;
	void input(int facultyId, int workingHours, float ratePerHour)
	{
		input(facultyId);
		this.workingHours=workingHours;
		this.ratePerHour=ratePerHour;
		setSalary(workingHours * ratePerHour);
	}	
}
class FacultyDemo
{
	public static void main(String args[])
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter Faculty Id, Basic Salary, Allowance for Full time Fac :");
		int facultyId;
		facultyId=sc.nextInt();
		float basicSalary=sc.nextFloat();
		float allowance=sc.nextFloat();

		FullTimeFaculty f = new FullTimeFaculty();
		f.input(facultyId,basicSalary,allowance);
		f.printSalary();

		System.out.println("Enter faculty Id, working hours,Rate per Hour for Part time Fac :");
		facultyId=sc.nextInt();
		int workingHour=sc.nextInt();
		float ratePerHour=sc.nextFloat();

		PartTimeFaculty p = new PartTimeFaculty(); 
		p.input(facultyId,workingHour,ratePerHour);
		p.printSalary();
	}
}


===============================================================================================================
45.	Create a class Student with two members : rollno and percentage. Create default and parameterized constructors. Create method show() to display information. Create another class CollegeStudent inherits Student class. Add a new member semester to it. Create default and parameterized constructors. Also override show() method that calls super class show() method and displays semester. Create another class SchoolStudent inherits Student class. Add a new member className(eg 12th ,10th etc.) to it. Create default and parameterized constructors. Also override show() method that calls super class show() method and displays className. Create a class( say Demo) with main method that carries out the operation of the project : -- has array to store objects of any class(Student,  CollegeStudent or SchoolStudent) --create two CollegeStudent  and three SchoolStudent objects and store them inside the array -- display all records from the array -- search record on the basic of rollno and check given rollno is of SchoolStudent or of CollegeStudent. --count how many students are having A grade, if for A grade percentage >75. 
----->
class Student 
{
	private int rNo;
    	private double percentage;

    	Student() 
	{
              	percentage = 0;
    	}

    	Student(int rollNo, double percentage) 
	{
        	this.rNo = rNo;
        	this.percentage = percentage;
    	}

    	void show() 
	{
        	System.out.print("Roll no. : " + rNo + " Percentage: " + percentage + "%");
    	}

    	int getRollNo() 
	{
        	return rNo;
    	}

    	double getPercentage() 
	{
        	return percentage;
    	}

}

class CollegeStudent extends Student 
{
    	private int semester;

    	CollegeStudent() 
	{
        	semester = 0;
    	}

    	CollegeStudent(int rNo, double percentage, int semester) 
	{
        	super(rNo, percentage);
        	this.semester = semester;
	}

    	void show() 
	{
        	super.show();
        	System.out.println(" Semester : " + semester);
    	}

}

class SchoolStudent extends Student 
{
    	private int className;

    	SchoolStudent() 
	{
        	className = 0;
    	}

    	SchoolStudent(int rNo, double percentage, int className) 
	{
        	super(rNo, percentage);
        	this.className = className;
    	}

    	void show() 
	{
        	super.show();
        	System.out.println(" className: " + className);
    	}

}

public class StudentDemo 
{

    	public static void main(String args[]) 
	{
        	Student arr[] = { new CollegeStudent(10, 60, 1), new CollegeStudent(12, 80, 2), new SchoolStudent(15, 95, 10),
                	new SchoolStudent(16, 90, 8), new SchoolStudent(18, 70, 7) };

        	for (Student s : arr) {
            	s.show();
        }

        int searchRollNo = 15;

        for (Student s : arr) 
	{
            if (s.getRollNo() == searchRollNo) 
	    {

                if (s instanceof CollegeStudent)
		{
                    	System.out.println("This is a college student with following details:");
                }
		else if (s instanceof SchoolStudent)
                {
		   	System.out.println("This is a School student with following details:");
                }
		s.show();
            }
        }
        int count = 0;
        for (Student s : arr) {
            if (s.getPercentage() >= 75) 
	    {
                System.out.print("Grade = A  ");
                s.show();
                count++;
            }
        }

        System.out.println("No of students with A grade: " + count);

    }

}

===============================================================================================================
46.	Create a program to demonstrate the use of instanceof operator or secure reference down casting.
---->
import java.lang.*;

class Shape 
{

    	int length;
    	int height;

    	void show() 
	{
        	System.out.println("Length: " + length + " height: " + height);
    	}

    	Shape() 
	{
    	}

    	Shape(int length, int height) 
	{
        	this.length = length;
        	this.height = height;
    	}

    	void Area() 
	{
    	}

	}

	class Rectangle extends Shape 
	{

    	void Area() 
	{
        	super.show();
        	System.out.println("Area:  " + (length * height));
    	}

    	void diagonal() 
	{
        	double a = Math.pow(length, 2) + Math.pow(height, 2);
        	System.out.println(" Diagonal is: " + (Math.sqrt(a)));
    	}

    	Rectangle() 
	{
    	}

    	Rectangle(int length, int height) 
	{
        	super(length, height);
    	}
	
}

class Triangle extends Shape 
{
    	void Area() 
	{
        	super.show();
        	System.out.println("Area:  " + (0.5 * length * height));
    	}

    	Triangle() 
	{
    	}

    	Triangle(int length, int height) 
	{
        	super(length, height);
    	}
}

public class ReferenceDownCastingDemo 
{
	public static void main(String[] args) 
	{

        	Shape sArr[] = { new Rectangle(30, 40), new Triangle(10, 20) };

        	sArr[0].Area();

        	Rectangle r = (Rectangle) sArr[0];
        	r.diagonal();
        	sArr[1].Area();

    	}

}
===============================================================================================================
47.	Create a program to demonstrate constructor chaining.
------>
class Base
{
	Base()
	{
		System.out.println("No-arg Constructor Base");
	}
	Base(int i)
	{
		System.out.println("Parameterized Constructor Base");
	}
}
class Derived extends Base
{
	Derived()
	{
		
		System.out.println("No-arg Constructor Derived");
	}
	Derived(int i)
	{
		System.out.println("Parameterized Constructor Derived");
	}
}
class ConstructorChaningDemo
{
	public static void main(String args[])
	{
		Derived d = new Derived();
		Derived d1 = new Derived(11);
	}
}
===============================================================================================================
48.	Create an Abstract class Processor with int member variable data  and method showData to display data value. Create abstract method process() to define processing of member data. Create a class  Factorial using abstract class Processor  to calculate and print factorial of a number by overriding the process method. b. Create a class Circle using abstract class Processor to calculate and print area of a circle by overriding the process method.Ask user to enter choice (factorial or circle area).  Also ask data to work upon. Use Processor class reference to achieve this mechanism.
----->
import java.util.*;
abstract class Processor
{
	int data;
	void showData()
	{
		System.out.println("Result = "+data);
	}
	abstract void proccess();
} 
class Factorial extends Processor
{
	void proccess()
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter Number :");
		int n=sc.nextInt();
		int fact=1;
		for(int i=1;i<=n;i++)
		{
			fact=fact*i;
		}
		data=fact;
	}
}

class Circle extends Processor
{
	void proccess()
	{
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter radius to calculate Circle :");
		int r=sc.nextInt();
		data=(int)(3.14*r)*2;
	}
}
class AbstractDemo
{
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter ur Choice :\n1) Calculate Factorial \n2)Calculate Area of circle");
		
		int ch=sc.nextInt();
		
		switch(ch)
		{
			case 1:
				Factorial f = new Factorial();
				f.proccess();
				f.showData();
				break;
			case 2:
				Circle c = new Circle();
				c.proccess();
				c.showData();
				break;
			default :
				System.out.println("Invalid Choice");
		}
	}
}

===============================================================================================================
49.	Create Interface Taxable with members salesTax=7% and incomeTax=10.5%. create abstract method calcTax(). a. Create class Employee(empId,name,salary) and implement Taxable to calculate incomeTax on yearly salary. b. Create class Product(pid,price,quantity) and implement Taxable to calculate salesTax on unit price of product. c. Create class for main method(Say XYZ), accept employee information and a product information from user and print income tax and sales tax respectively.
---->
import java.util.*;
interface Taxable
{
	float salesTax=7f,incomeTax=10.5f;
	void calcTax();
}
class Employee implements Taxable
{
	int empId;
	String name;
	double salary;
	float tax;
	Employee(int empId, String name, double salary)
	{
		this.empId=empId;
		this.name=name;
		this.salary=salary;
	}
	public void calcTax()
	{
		tax=(float)((salary*12)*(incomeTax))/100;
	}
	void show()
	{
		System.out.println("Annual Income Tax ="+tax);
	}
}
class Product implements Taxable
{
	int pid;
	float price;
	int quantity;
	float tax;
	Product(int pid, float price, int quantity)
	{
		this.pid=pid;
		this.price=price;
		this.quantity=quantity;
	}
	public void calcTax()
	{
		tax=(float)(price*salesTax)/100;
	}
	void show()
	{
		System.out.println("per unit sales Tax = "+tax);
	}
}

class InterfaceDemo
{
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter empId, name , salary :");
		int empId = sc.nextInt();
		String name = sc.next();
		double salary = sc.nextDouble(); 
		Employee e = new Employee(empId,name,salary);
		e.calcTax();
		e.show();

		System.out.println("Enter pid,price,quantity :");
		int pid=sc.nextInt();
		float price=sc.nextFloat();
		int quantity=sc.nextInt();
		
		Product p = new Product(pid,price,quantity);
		p.calcTax();
		p.show();
	}
}

===============================================================================================================
50.	Explain the importance of toString() and equals() method of the Object class and override them on class Employee(empId,name,salary).  a. Create class for main method(say XYZ),and accept five employees information and store in an array. Also ensure if entered empId already exist or not (use equals method).  b. Display all employee info using toString method.
------>
package Day7;

import java.util.Scanner;

class Employee{
	private int empId;
	private String name;
	private double salary;
	public Employee(int empId, String name, double salary) {
		super();
		this.empId = empId;
		this.name = name;
		this.salary = salary;
	}
	@Override
	public boolean equals(Object obj) {
		Employee emp=(Employee)obj;
		return empId == emp.empId;
	}
	@Override
	public String toString() {
		return "Employee [empId=" + empId + ", name=" + name + ", salary=" + salary + "]";
	}
	
}
public class ToStringDemo {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc=new Scanner(System.in);
		Employee arr[]= new Employee[5];
		for(int i=0;i<5;i++)
		{
			System.out.println("Enter Id :");
			int id=sc.nextInt();
			System.out.println("Enter name :");
			String name=sc.next();
			System.out.println("Enter salary :");
			double sal=sc.nextDouble();
			Employee e=new Employee(id,name,sal);
			arr[i]=e;
			
		}
		for(int i=0;i<5;i++)
		{
			System.out.println(arr[i]+".equals("+arr[i+1]+"):"+arr[i].equals(arr[i+1]));
		}
		
		
	}

}
===============================================================================================================
51.	Create a program that helps banks to maintain records. It should have following facilities. o Anybody can create current or saving account with following initial information: account number, name, balance, and branch. o display account detail for a particular accounts. o display total money deposited in bank. o allow deposit and  withdrawal in an account  . o for saving account opening balance and minimum balance must be 5000. o for current account opening balance and minimum balance must be 1000. o can not withdraw the amount from the account that makes balance less than the minimum balance. 
------>
package Day7;

import java.util.Scanner;

public class BankAccount {

	int accNo;
	String name;
	double balance;
	String branch;
	
	public BankAccount(int accNo, String name, double balance, String branch) {
		super();
		this.accNo = accNo;
		this.name = name;
		this.balance = balance;
		this.branch = branch;
	}
	void deposit(double amt)
	{
		balance+=amt;
		System.out.println("Depositet Successfully");
	}
	void withdraw(double amt)
	{
		Scanner sc=new Scanner(System.in);
		if(balance!=0)
		{
			balance=balance-amt;
		}
		else
		{
			System.out.println("Insufficient Balance!..");
		}
	}
	void showBalance()
	{
		System.out.println("Balance ="+balance);
	}
	
	@Override
	public String toString() {
		return "BankAccount [accNo=" + accNo + ", name=" + name + ", balance=" + balance + ", branch=" + branch + "]";
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		Scanner sc=new Scanner(System.in);
		System.out.println("Enter ur choice create Account :\n1)Saving Account\n2)Current Account");
		int ch=sc.nextInt();
		switch(ch)
		{
		case 1:
			System.out.println("Create Saving Account Enter Details :");
			System.out.println("Enter account no:");
			int accno=sc.nextInt();
			System.out.println("Enter Name :");
			String name=sc.next();
			System.out.println("Enter Balance more than 5000 :");
			double amt=sc.nextDouble();
			System.out.println("Enter Branch :");
			String branch=sc.next();
			if(amt>=5000)
			{
				BankAccount b1=new BankAccount(accno,name,amt,branch);
				
				System.out.println("Enter choice to Perform\n1)deposit\n2)withdraw\n3)show Balance\n4)show Data");
				int ch1=sc.nextInt();
				switch(ch1)
				{
				case 1:
					System.out.println("Enter Amount to deposit :");
					int dep=sc.nextInt();
					b1.deposit(dep);
					break;
				case 2:
					System.out.println("Enter amt to withdraw :");
					int withdraw=sc.nextInt();
					b1.withdraw(withdraw);
					break;
				case 3:
					b1.showBalance();
					break;
				case 4:
					System.out.println(b1);
					break;
					
				default :
					System.out.println("Invalid Input..");
					break;
					
				}
				
			}
			else {
				System.out.println("Minimum 5000 balance required for Account Opening");
			}
			
			
			
			
			break;
			
		case 2:
			System.out.println("Create Current Account Enter Details :");
			System.out.println("Enter account no:");
			int accno1=sc.nextInt();
			System.out.println("Enter Name :");
			String name1=sc.next();
			System.out.println("Enter Balance more than 5000 :");
			double amt1=sc.nextDouble();
			System.out.println("Enter Branch :");
			String branch1=sc.next();
			if(amt1>=1000)
			{
				BankAccount b2=new BankAccount(accno1,name1,amt1,branch1);
				
				System.out.println("Enter choice to Perform\n1)deposit\n2)withdraw\n3)show Balance\n4)show Data");
				int ch1=sc.nextInt();
				switch(ch1)
				{
				case 1:
					System.out.println("Enter Amount to deposit :");
					int dep=sc.nextInt();
					b2.deposit(dep);
					break;
				case 2:
					System.out.println("Enter amt to withdraw :");
					int withdraw=sc.nextInt();
					b2.withdraw(withdraw);
					break;
				case 3:
					b2.showBalance();
					break;
				case 4:
					System.out.println(b2);
					break;
					
				default :
					System.out.println("Invalid Input..");
					break;
				}
			}
			else {
				System.out.println("Minimum 1000 balance required for Account Opening");
			}
			break;
		
		default :
			System.out.println("Invalid Data");
			break;
			
		}
		
	}

}

===============================================================================================================
52.	Input name of a person and count how many vowels it contains.  Use String class functions. 
------->
package Day8;

import java.util.Scanner;

public class VowelsCount {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter Persons Name :");
		String name = sc.next();
		name=name.toLowerCase();
		int vCnt=0;
		for(int i=0;i<name.length();i++)
		{
			if(name.charAt(i)=='a' || name.charAt(i)=='e' || name.charAt(i)=='i' || name.charAt(i)=='o' || name.charAt(i)=='u')
			{
				vCnt++;
			
			}
		}
		System.out.println("Nomber of Vowels in String :-"+vCnt);
	}

}

===============================================================================================================
53.	Input data exactly in the following format, and print sum of all integer values. “67, 89, 23, 67, 12,
 55, 66”.   (Hint use String class split method and Integer class parseInt method) .
----->
package Day8;
import java.util.*;
public class SplitParseIntDemo {

	public static void main(String[] args) {
		String str= "67,89,23,67,12,55,66";
		String strarr[] = str.split(",");
		int sum=0;
		for(String a: strarr)
		{
			int n=Integer.parseInt(a);
			sum+=n;
		}
		System.out.println("Sum : "+sum);

	}

}
===============================================================================================================
54.	Write a program to reverse the given String.
------>
package Day8;

import java.util.Scanner;

public class StringReverse {

	public static void main(String[] args) {
		Scanner sc =new Scanner(System.in);
		System.out.println("Enter String :");
		String str=sc.next();
		String str1="";
		for(int i=str.length()-1;i>=0;i--)
		{
			str1 += str.charAt(i);
		}
		System.out.println("Reverse String :"+str1);
		
	}

}
===============================================================================================================
55.	Write a program to count no of words in the String.
----->
package Day8;

import java.util.Scanner;

public class wordCount {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter String :");
		String str = sc.next();
		int wCnt=0;
		for(int i=0;i<str.length();i++)
		{
			wCnt++;
		}
		System.out.println("Nomber of Words in String :-"+wCnt);
	}

}
===============================================================================================================
56.	Write a program to convert very first character of every word in uppercase in a String.
-------->
package Day8;

import java.util.Scanner;

public class FirstCapitalLatter {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter String :");
		String str=sc.next();
		String outputString=str.substring(0, 1).toUpperCase() + str.substring(1);
		System.out.println("Output String :"+outputString);
	}

}
===============================================================================================================
57.	Write a program to reverse every word of the String.
----->
package Day8;

import java.util.Scanner;

public class StringReverseByEachWord {

	public static void main(String[] args) {
		Scanner sc =new Scanner(System.in);
		System.out.println("Enter String :");
		String str=sc.next();
		String str1="";
		for(int i=str.length()-1;i>=0;i--)
		{
			str1 += str.charAt(i);
		}
		System.out.println("Reverse String :"+str1);
		
	}

}
===============================================================================================================
58.	Store name of weekdays in an array (starting from “Sunday” at 0 index). Ask day position from user and print day name. Handle array index out of bound exception and give proper message if user enter day index outside range (0-6). 
-------->
package Day9;

import java.util.Scanner;

public class ArrayIndexException {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		String str = "Sunday,Monday,Tuesday,Wednesday,Thurseday,Friday,Satarday";
		String strarr[]=str.split(",");
		System.out.println("Enter Day :");
		int day =sc.nextInt();
		if(day<=6)
		{
			for(int i=0;i<strarr.length;i++)
			{
				if(i==day)
					System.out.println("Day : "+strarr[i]);
			}
		}
		else {
			throw new ArrayIndexOutOfBoundsException();
		}
		
	}

}
===============================================================================================================
59.	Create a class Voter(voterId, name, age) with parameterized constructor.  The parameterized constructor should throw a checked exception if age is less than 18. The message of exception is “invalid age for voter ”
------>
package Day9;

import java.io.IOException;

class Voter{
	int voterId;
	String name;
	int age;
	public Voter(int voterId, String name, int age) {
		super();
		this.voterId = voterId;
		this.name = name;
		this.age = age;
		try {
			if(age >18)
			{
				System.out.println("ok");
			}
			else {
				throw new IOException();
			}
		}
		catch(IOException e) {
			System.out.println("invalid age for voter ");
		}
	}
	
}
public class CheckedExceptionDemo {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
			Voter v=new Voter(1,"ght",17);
	}

}
=============================================================================================================== 
60.	Create Interface StudentFee and declare following method.  getFee() throws InvalidFeeException. This method ask fees from user and throws exception if user enters invalid or negative fees Create class Student with members (name, fees) and implement the StudentFee Interface
----->
package Day9;

import java.util.Scanner;

interface StudentFee{
	void getFee();
}
class InvalidFeeException extends Exception{
	
}
class Student implements StudentFee{

	@Override
	public void getFee() {
		// TODO Auto-generated method stub
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter fee :");
		double fee=sc.nextDouble();
		try {
			if(fee < 5000)
			{
			throw new InvalidFeeException();
			}else {
				System.out.println("Fee : "+fee);
			}
		}catch(InvalidFeeException e) {
			System.out.println(e);
		}
	}
	
}
public class UserDefineException {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		Student s=new Student();
		s.getFee();
	}

}

===============================================================================================================

